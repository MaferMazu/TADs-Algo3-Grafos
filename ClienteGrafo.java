/*************************************************************************                           
 * LABORATORIO ALGORITMOS Y ESTRUCTURAS 3
 *
 * Clase: ClienteGrafo
 * Compilacion:  javac ClienteGrafo.java
 *
 * Prueba todas las funciones de los TADs: Vertice, Lado, Arista, Arco, GrafoNoDirigido y Digrafo.
 *
 *  @author Maria Fernanda Magallanes: 13-10787
 *  @author Victoria Torres: 12-11468
 *************************************************************************
 **/

public class ClienteGrafo {
  public static void main(String [] args) {
    System.out.println("\n");
    System.out.println("/**************************");
    System.out.println("/**************************");
    System.out.println("");
    System.out.println("Este es el cliente Grafo");
    System.out.println("");
    System.out.println("**************************/");
    System.out.println("**************************/");
    System.out.println("\n");
    System.out.println("Probando TADS individuales: \n");
    System.out.println("**************************");
    System.out.println("TAD Vertice: ");
    System.out.println("**************************");
    System.out.println("crearVertice: ");
    Vertice v1 = new Vertice("v1",0.0);
    System.out.println(v1);
    Vertice v2 = new Vertice("v2",5.0);
    System.out.println(v2);
    Vertice v3 = new Vertice("v3",-0.3);
    System.out.println(v3);
    System.out.println("\n");
    System.out.println("getPeso:");
    System.out.println(v1+" : "+ Double.toString(v1.getPeso()));
    System.out.println(v2+" : "+ Double.toString(v2.getPeso()));
    System.out.println(v3+" : "+ Double.toString(v3.getPeso()));
    System.out.println("\n");
    System.out.println("getId:");
    System.out.println(v1+" : "+ v1.getId());
    System.out.println(v2+" : "+ v2.getId());
    System.out.println(v3+" : "+ v3.getId());
    System.out.println("\n");
    System.out.println("**************************");
    System.out.println("TAD Lado: ");
    System.out.println("**************************");
    System.out.println("\n");
    System.out.println("**************************");
    System.out.println("TAD Arco: ");
    System.out.println("**************************");
    System.out.println("crearArco:");
    Arco a1 = new Arco("a1",100.0,v1,v2);
    System.out.println(a1);
    Arco a2 = new Arco("a2",80.0,v1,v3);
    System.out.println(a2);
    Arco a3 = new Arco("a3",90.0,v3,v2);
    System.out.println(a3);
    System.out.println("\n");
    System.out.println("getExtremoInicial:");
    System.out.println(a1+" : "+ a1.getExtremoInicial());
    System.out.println(a2+" : "+ a2.getExtremoInicial());
    System.out.println(a3+" : "+ a3.getExtremoInicial());
    System.out.println("\n");
    System.out.println("getExtremoFinal:");
    System.out.println(a1+" : "+ a1.getExtremoFinal());
    System.out.println(a2+" : "+ a2.getExtremoFinal());
    System.out.println(a3+" : "+ a3.getExtremoFinal());
    System.out.println("\n");
    System.out.println("**************************");
    System.out.println("TAD Arista: ");
    System.out.println("**************************");
    System.out.println("crearArista:");
    Arista ari1 = new Arista("ari1",100.0,v1,v2);
    System.out.println(ari1);
    Arista ari2 = new Arista("ari2",30.0,v1,v3);
    System.out.println(ari2);
    Arista ari3 = new Arista("ari3",0.0,v3,v2);
    System.out.println(ari3);
    System.out.println("\n");
    System.out.println("getExtremo1:");
    System.out.println(ari1+" : "+ ari1.getExtremo1());
    System.out.println(ari2+" : "+ ari2.getExtremo1());
    System.out.println(ari3+" : "+ ari3.getExtremo1());
    System.out.println("\n");
    System.out.println("getExtremo2:");
    System.out.println(ari1+" : "+ ari1.getExtremo2());
    System.out.println(ari2+" : "+ ari2.getExtremo2());
    System.out.println(ari3+" : "+ ari3.getExtremo2());
    System.out.println("\n");
    System.out.println("**************************");
    System.out.println("TAD Digrafo: ");
    System.out.println("**************************");
    System.out.println("crearGrafoDirigido: (vacio)");
    Digrafo digrafo = new Digrafo();
    System.out.println(digrafo);
    System.out.println("\n");
    System.out.println("cargarGrafo: (prueba.txt)");
    boolean x = digrafo.cargarGrafo("prueba.txt");
    System.out.println(x);
    System.out.println(digrafo);
    System.out.println("\n");
    System.out.println("numeroDeVertices: ");
    int numeroDeVertices = digrafo.numeroDeVertices();
    System.out.println(numeroDeVertices);
    System.out.println("\n");
    System.out.println("numeroDeLados: ");
    int numeroDeLados = digrafo.numeroDeLados();
    System.out.println(numeroDeLados);
    System.out.println("\n");
    System.out.println("agregarVertice: (con vertice)");
    Vertice vNuevo1 = new Vertice("vNuevo1",8.0);
    x = digrafo.agregarVertice(vNuevo1);
    System.out.println(x);
    System.out.println("agregarVertice: (con id y peso de un vertice)");
    x = digrafo.agregarVertice("vNuevo2",3.1415);
    System.out.println(x);
    System.out.println("agregarVertice: (con vertice en el grafo))");
    x = digrafo.agregarVertice(vNuevo1);
    System.out.println(x);
    System.out.println("\n");
    System.out.println("obtenerVertice: (con id de vertice en el grafo))");
    Vertice vResultante;
    vResultante = digrafo.obtenerVertice("vNuevo2");
    System.out.println(vResultante);
    System.out.println("obtenerVertice: (con id de vertice que no esta en el grafo)");
    vResultante = digrafo.obtenerVertice("NoEsta");
    //System.out.println(vResultante);
    System.out.println("\n");
    System.out.println("estaVertice: (con id de vertice en el grafo))");
    x = digrafo.estaVertice("vNuevo1");
    System.out.println(x);
    System.out.println("estaVertice: (con id de vertice que no esta en el grafo)");
    x = digrafo.estaVertice("NoEsta");
    System.out.println(x);
    System.out.println("\n");
    System.out.println("estaLado: (con id de vertices en el grafo)");
    x = digrafo.estaLado("v2","v4");
    System.out.println(x);
    System.out.println("estaLado: (con id de vertices que no estan en el grafo)");
    x = digrafo.estaLado("NoEsta1","NoEsta2");
    System.out.println(x);
    System.out.println("\n");
    System.out.println("eliminarVertice: (con id de vertice esta en el grafo)");
    x = digrafo.eliminarVertice("v1");
    System.out.println(x);
    System.out.println("eliminarVertice: (con id de vertice que no esta en el grafo)");
    x = digrafo.eliminarVertice("NoEsta");
    System.out.println(x);
    System.out.println("\n");
    System.out.println("vertices: (Lista de vertices del grafo)");
    System.out.print(digrafo.vertices());
    System.out.println("\n");
    System.out.println("lados: (Lista de lados/arcos del grafo)");
    System.out.print(digrafo.lados());
    System.out.println("\n");
    System.out.println("grado: (con id de vertice)");
    int num = digrafo.grado("v2");
    System.out.println("El grado de v2 es: "+num);
    num = digrafo.grado("v4");
    System.out.println("El grado de v4 es: "+num);
    num = digrafo.grado("NoEsta");
    System.out.println("El grado de un vertice que no esta: "+num);
    System.out.println("\n");
    System.out.println("adyacentes: (Lista de adyacentes de un vertice)");
    System.out.print(digrafo.adyacentes("v2"));
    System.out.println("\n");
    System.out.println("adyacentes: (Lista de adyacentes de un vertice que no esta en el grafo)");
    digrafo.adyacentes("NoEsta");
    System.out.println("\n");;
    System.out.println("incidentes: (Lista de incidentes de un vertice)");
    System.out.print("De v2:\n" +digrafo.incidentes("v2"));
    System.out.println("\n");
    System.out.print("De un vertice que no esta en el grafo: " +digrafo.incidentes("NoEsta"));
    System.out.println("\n");
    //Digrafo digrafo = new Digrafo();
    System.out.println("clone: ");
    System.out.println(digrafo.clone());
    System.out.println("\n");
    System.out.println("agregarArco: (con id, peso, vertice inicial y vertice final)");
    System.out.println("Con vertices en el grafo: "+ digrafo.agregarArco("arco2",40.0,"v5","v4"));
    System.out.println("Con vertices que no estan en el grafo: "+ digrafo.agregarArco("arco3",80.0,"v1","v3"));
    System.out.println("\n");
    System.out.println("gradoInterior: (con id de vertice en el grafo)");
    num = digrafo.gradoInterior("v4");
    System.out.println("El grado interior de v4 es: "+num);
    num = digrafo.gradoInterior("NoEsta");
    System.out.println("El grado interior de un vertice que no esta en el grafo: "+num);
    System.out.println("\n");
    System.out.println("gradoExterior: (con id de vertice en el grafo)");
    num = digrafo.gradoExterior("v2");
    System.out.println("El grado exterior de v2 es: "+num);
    num = digrafo.gradoExterior("NoEsta");
    System.out.println("El grado exterior de un vertice que no esta en el grafo: "+num);
    System.out.println("\n");
    System.out.println("sucesores: (con id de un vertice que esta en el grafo)");
    System.out.print("Sucesores de v2:\n"+digrafo.sucesores("v2"));
    System.out.println("\n");
    System.out.println("sucesores: (con id de un vertice que no esta en el grafo)");
    System.out.print(digrafo.sucesores("NoEsta"));
    System.out.println("\n");
    System.out.println("predecesores: (con id de un vertice que esta en el grafo)");
    System.out.print("Predecesores de v4:\n"+digrafo.predecesores("v4"));
    System.out.println("\n");
    System.out.println("predecesores: (con id de un vertice que no esta en el grafo)");
    System.out.print(digrafo.predecesores("NoEsta"));
    System.out.println("\n");
    System.out.println("eliminarArco: (con id de un arco que esta en el grafo)");
    x = digrafo.eliminarArco("a2");
    System.out.println(x);
    System.out.println("\n");
    System.out.println("eliminarArco: (con id de un arco que no esta en el grafo)");
    x = digrafo.eliminarArco("NoEsta");
    System.out.println(x);
    System.out.println("\n");
    System.out.println("obtenerArco: (con id de un arco que esta en el grafo)");
  Arco aResultante;
    aResultante = digrafo.obtenerArco("a1");
    System.out.println(aResultante);
    System.out.println("\n");
    System.out.println("obtenerArco: (con id de un arco que no esta en el grafo)");
    aResultante = digrafo.obtenerArco("NoEsta");
    System.out.println(aResultante);
    ///////
    System.out.println("**************************");
    System.out.println("TAD GrafoNoDirigido: ");
    System.out.println("**************************");
    System.out.println("crearGrafoDirigido: (vacio)");
    GrafoNoDirigido grafo = new GrafoNoDirigido();
    System.out.println(grafo);
    System.out.println("\n");
    System.out.println("cargarGrafo: (prueba1.txt)");
    x = grafo.cargarGrafo("prueba1.txt");
    System.out.println(x);
    System.out.println(grafo);
    System.out.println("\n");
    System.out.println("numeroDeVertices: ");
    numeroDeVertices = grafo.numeroDeVertices();
    System.out.println(numeroDeVertices);
    System.out.println("\n");
    System.out.println("numeroDeLados: ");
    numeroDeLados = grafo.numeroDeLados();
    System.out.println(numeroDeLados);
    System.out.println("\n");
    System.out.println("agregarVertice: (con vertice)");
    x = grafo.agregarVertice(vNuevo1);
    System.out.println(x);
    System.out.println("agregarVertice: (con id y peso de un vertice)");
    x = grafo.agregarVertice("vNuevo2",3.1415);
    System.out.println(x);
    System.out.println("agregarVertice: (con vertice en el grafo))");
    x = grafo.agregarVertice(vNuevo1);
    System.out.println(x);
    System.out.println("\n");
    System.out.println("obtenerVertice: (con id de vertice en el grafo))");
    vResultante = grafo.obtenerVertice("vNuevo2");
    System.out.println(vResultante);
    System.out.println("obtenerVertice: (con id de vertice que no esta en el grafo)");
    vResultante = grafo.obtenerVertice("NoEsta");
    //System.out.println(vResultante);
    System.out.println("\n");
    System.out.println("estaVertice: (con id de vertice en el grafo))");
    x = grafo.estaVertice("vNuevo1");
    System.out.println(x);
    System.out.println("estaVertice: (con id de vertice que no esta en el grafo)");
    x = grafo.estaVertice("NoEsta");
    System.out.println(x);
    System.out.println("\n");
    System.out.println("estaLado: (con id de vertices en el grafo)");
    x = grafo.estaLado("v2","v4");
    System.out.println(x);
    System.out.println("estaLado: (con id de vertices que no estan en el grafo)");
    x = grafo.estaLado("NoEsta1","NoEsta2");
    System.out.println(x);
    System.out.println("\n");
    System.out.println("eliminarVertice: (con id de vertice esta en el grafo)");
    x = grafo.eliminarVertice("v1");
    System.out.println(x);
    System.out.println("eliminarVertice: (con id de vertice que no esta en el grafo)");
    x = grafo.eliminarVertice("NoEsta");
    System.out.println(x);
    System.out.println("\n");
    System.out.println("vertices: (Lista de vertices del grafo)");
    System.out.print(grafo.vertices());
    System.out.println("\n");
    System.out.println("lados: (Lista de lados/arcos del grafo)");
    System.out.print(grafo.lados());
    System.out.println("\n");
    System.out.println("grado: (con id de vertice)");
    num = grafo.grado("v2");
    System.out.println("El grado de v2 es: "+num);
    num = grafo.grado("v4");
    System.out.println("El grado de v4 es: "+num);
    num = grafo.grado("NoEsta");
    System.out.println("El grado de un vertice que no esta: "+num);
    System.out.println("\n");
    System.out.println("adyacentes: (Lista de adyacentes de un vertice)");
    System.out.print(grafo.adyacentes("v2"));
    System.out.println("\n");
    System.out.println("adyacentes: (Lista de adyacentes de un vertice que no esta en el grafo)");
    grafo.adyacentes("NoEsta");
    System.out.println("\n");;
    System.out.println("incidentes: (Lista de incidentes de un vertice)");
    System.out.print("De v2:\n" +grafo.incidentes("v2"));
    System.out.println("\n");
    System.out.print("De un vertice que no esta en el grafo: " +grafo.incidentes("NoEsta"));
    System.out.println("\n");
    //grafo grafo = new grafo();
    System.out.println("clone: ");
    System.out.println(grafo.clone());
    System.out.println("\n");
    System.out.println("agregarArco: (con id, peso, vertice inicial y vertice final)");
    System.out.println("Con vertices en el grafo: "+ grafo.agregarArista("Arista2",40.0,"v5","v4"));
    System.out.println("Con vertices que no estan en el grafo: "+ grafo.agregarArista("Arista3",80.0,"v1","v3"));
    System.out.println("\n");
    System.out.println("eliminarArista: (con id de un Arista que esta en el grafo)");
    x = grafo.eliminarArista("a2");
    System.out.println(x);
    System.out.println("\n");
    System.out.println("eliminarArista: (con id de un Arista que no esta en el grafo)");
    x = grafo.eliminarArista("NoEsta");
    System.out.println(x);
    System.out.println("\n");
    System.out.println("obtenerArista: (con id de un Arista que esta en el grafo)");
    Arista aResultante1;
    aResultante1 = grafo.obtenerArista("a1");
    System.out.println(aResultante1);
    System.out.println("\n");
    System.out.println("obtenerArista: (con id de un Arista que no esta en el grafo)");
    aResultante1 = grafo.obtenerArista("NoEsta");
    System.out.println(aResultante1);





  }

}